---
import Kategoricard from "../components/Kategoricard.astro";
import MainLayout from "../layouts/MainLayout.astro";
import Sti from "../components/Sti.astro";
import Card from "../components/Card.astro";
import "..//styles/style.css";
---
<MainLayout
  title="Det Lille Kafferisteri"
  metacontent="(Indsæt metabeskrivelse her)"
>

    <div class="slider">
        <div class="cards">
          <div class="card active">
            <Card
            kategori="Espresso"
            title="MADAMMERNES MØRKE MOCCA | MEXICO"
            price="FRA 79 DKK"
            img_product="/billeder/produktbilleder/packshot4.webp"
            link_side="/kaffesingle"
          />
        </div>
          <div class="card">
            <Card
      kategori="Filterkande"
      title="MORGENKAFFE | NICARAGUA & BRASILIEN"
      price="FRA 79 DKK"
      img_product="/billeder/produktbilleder/packshot1.webp"
      link_side="/kaffesingle"
      />
    </div>
          <div class="card">
            <Card
            kategori="Filterkande"
            title="UGANDA | SINGLE ORIGIN"
            price="FRA 79 DKK"
            img_product="/billeder/produktbilleder/packshot2.webp"
            link_side="/kaffesingle"
          /></div>
          <!-- Add more cards here -->
        </div>
        <div class="indicators">
          <span class="indicator active" onclick="moveToSlide(0)"></span>
          <span class="indicator" onclick="moveToSlide(1)"></span>
          <span class="indicator" onclick="moveToSlide(2)"></span>
          <!-- Add more indicators here -->
        </div>
      </div>
      
</MainLayout>
      
<style>
.slider {
  position: relative;
  width: 80%;
  margin: 0 auto;
  overflow: hidden; /* Ensure only one card is visible */
}

.cards {
  display: flex;
  transition: transform 0.3s ease-in-out;
}

.card {
  flex: 0 0 auto;
  width: calc(33.333% - 20px); /* Three cards in a row for desktop */
  padding: 20px;
  transition: border-color 0.3s ease-in-out;
}

.card.active {
  border-color: #333;
  font-weight: bold;
}

.indicators {
  display: flex;
  justify-content: center;
  margin-top: 10px;
}

.indicator {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: #ccc;
  margin: 0 5px;
  cursor: pointer;
}

.indicator.active {
  background-color: #333;
  font-weight: bold;
}

/* ... (existing styles) */

/* ... (existing styles) */

/* Media query for mobile devices */
@media screen and (max-width: 768px) {
  .slider {
    overflow: hidden; /* Ensure only one card is visible */
  }

  .cards {
    display: flex;
    flex-wrap: nowrap; /* Display cards in a single row */
    overflow: hidden; /* Hide overflow */
    transition: transform 0.3s ease-in-out; /* Add transition for smooth movement */
  }

  .card {
    flex: 0 0 100%; /* Each card takes full width */
  }

  .indicators {
    display: flex;
    justify-content: center;
    margin-top: 10px;
  }

  .indicator {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: #ccc;
    margin: 0 5px;
    cursor: pointer;
  }

  .indicator.active {
    background-color: #333;
    font-weight: bold;
  }
}

@media (min-width: 768px) {
 .indicators {
    display: none;
  }
}




</style>

    <!--=============== scripts  ===============-->
    <script type="text/javascript">
const slider = document.querySelector('.slider');

let startX = 0;
let startY = 0;

slider.addEventListener('touchstart', (e) => {
  const touch = e.touches[0];
  startX = touch.clientX;
  startY = touch.clientY;
});

slider.addEventListener('touchmove', (e) => {
  const touch = e.touches[0];
  const deltaX = startX - touch.clientX;
  const deltaY = startY - touch.clientY;

  if (Math.abs(deltaY) > Math.abs(deltaX)) {
    e.preventDefault();
  }
});

function moveToSlide(index) {
  const cards = document.querySelectorAll('.slider .cards .card');
  const indicators = document.querySelectorAll('.slider .indicators .indicator');

  if (window.innerWidth <= 768) { // Apply only on screens smaller than or equal to 768px width (mobile)
    cards.forEach((card, i) => {
      card.style.display = 'none'; // Hide all cards initially on mobile
      indicators[i].classList.remove('active');
    });

    cards[index].style.display = 'block'; // Display the selected card on mobile
    indicators[index].classList.add('active');
  } else {
    // On desktop, show all cards and set indicator to active based on index
    cards.forEach((card, i) => {
      card.style.display = 'block';
      if (i === index) {
        indicators[i].classList.add('active');
      } else {
        indicators[i].classList.remove('active');
      }
    });
  }
}

// Ensure all cards are visible on transitioning to desktop
window.addEventListener('resize', function() {
  const cards = document.querySelectorAll('.slider .cards .card');
  if (window.innerWidth > 768) { // Check if transitioning to desktop view
    cards.forEach((card) => {
      card.style.display = 'block';
    });
  }
});










    </script>
    <script type="text/javascript" src="js/plugins.js"></script>
    <script type="text/javascript" src="js/scripts.js"></script>
</body>

</html>